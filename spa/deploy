#!/bin/bash

cd "$(dirname $0)"
verb="$1"
shift

set -e

get_last_dir() {
  path=$1

  array=( `echo $path | tr -s '/' ' '`)
  last_index=`expr ${#array[@]} - 1`
  echo ${array[${last_index}]}
  return 0
}

smart-yarn-run-deploy () {
  local last_deploy_commit_hash="$(git rev-parse HEAD)"
  local last_develop_commit_hash="$(git rev-parse origin/develop)"
  git fetch --prune

  if [ $last_develop_commit_hash != $last_deploy_commit_hash ]; then
    printf "\e[33mFound new develop commit\e[m => ${last_develop_commit_hash}\n"

    if git status | grep --quiet 'working tree clean'; then
      git checkout master
      git merge origin/develop
      
      if $1 == "service-host"; then
        shift
        if git diff --name-only "$last_deploy_commit_hash".."$last_develop_commit_hash" | grep --quiet '^yarn.lock$'; then
          sudo docker-compose build --no-cache spa
        else
          sudo docker-compose build spa
        fi
        sudo docker-compose run --rm spa yarn build
      else
        yarn
        yarn build
      fi

      git push origin master
      array=( `git describe --abbrev=0 | tr -s '.' ' '`)
      prev_tag=${array[1]}
      tag=${array[0]}.${array[1]}.$((array[2]+1))
      git tag $tag
      git push origin $tag
      exit 0
    else
      printf "\e[31mChanges not staged or commited some files\e[m\n"
      printf "\e[31;1mAborted!!\e[m\n"
      exit 1
    fi
  
  else
    printf 'Not found new develop commit.\n'
    printf "\e[31;1mAborted!!\e[m\n"
    exit 0
  fi
}


case "$verb" in
  'all')
    smart-yarn-run-deploy
    ;;

  *)
    set +x
    echo
    echo 'Subcommands'
    echo '  watch  -- yarn run watch (use this in development)'
    echo '  jest   -- run tests'
    echo '  js     -- build and stage js'
    echo '  css    -- build and stage css'
    echo '  stage  -- stage js and css'
    echo '  clean  -- clean js and css'
    echo '  all    -- build and stage js and css (use this before deploy)'
    echo
    echo 'You can use NOSTAGE=1 environment variable if you do not want to stage.'
    exit 64
esac
